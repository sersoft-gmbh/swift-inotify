name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-spm:
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
        swift-version: [ '5.6' ]
        xcode-version: [ '' ]
        include:
          - os: ubuntu-20.04
            swift-version: 5.7
            xcode-version: ''
          - os: ubuntu-22.04
            swift-version: 5.7
            xcode-version: ''

    runs-on: ${{ matrix.os }}

    steps:
      - if: ${{ runner.os == 'macOS' }}
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ matrix.xcode-version }}
      - name: Install Swift
        if: ${{ runner.os == 'Linux' }}
        uses: sersoft-gmbh/swifty-linux-action@v2
        with:
          release-version: ${{ matrix.swift-version }}
          platform: ${{ matrix.os }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Read OS Version
        uses: sersoft-gmbh/os-version-action@v2
        id: os-version
      - name: Read Swift Version
        uses: sersoft-gmbh/swift-version-action@v2
        id: swift-version
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: .build
          key: ${{ runner.os }}-${{ steps.os-version.outputs.version }}-spm-${{ steps.swift-version.outputs.version }}-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-${{ steps.os-version.outputs.version }}-spm-${{ steps.swift-version.outputs.version }}-
      - name: Build & Test
        run: swift test -v --parallel --enable-code-coverage
      - name: Generate Coverage Files
        uses: sersoft-gmbh/swift-coverage-action@v3
        id: coverage-files
      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ join(fromJSON(steps.coverage-files.outputs.files), ',') }}
          fail_ci_if_error: true
