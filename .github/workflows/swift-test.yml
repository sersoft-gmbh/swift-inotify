name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-spm:
    strategy:
      matrix:
        os: [ ubuntu-18.04, ubuntu-20.04 ]
        swift-version: [ 5.4 ]

    runs-on: ${{matrix.os}}

    steps:
      - if: runner.os == 'macOS'
        uses: maxim-lobanov/setup-xcode@v1.2.3
        with:
          xcode-version: ^12.4
      - name: Install Swift
        if: runner.os == 'Linux'
        uses: sersoft-gmbh/SwiftyActions@v1.2
        with:
          release-version: ${{matrix.swift-version}}
          platform: ${{matrix.os}}
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.6
        with:
          path: .build
          key: ${{runner.os}}-${{github.repository}}-spm-${{matrix.swift-version}}-${{hashFiles('**/Package.resolved')}}
          restore-keys: |
            ${{runner.os}}-${{github.repository}}-spm-${{matrix.swift-version}}-
      - name: Build & Test
        run: swift test -v --parallel --enable-code-coverage
      - name: Generate Coverage Files
        if: runner.os == 'macOS'
        run: xcrun llvm-cov export -format="lcov" .build/debug/*PackageTests.xctest/Contents/MacOS/*PackageTests -instr-profile .build/debug/codecov/default.profdata > coverage.lcov
      - name: Generate Coverage Files
        if: runner.os == 'Linux'
        run: llvm-cov export -format="lcov" .build/debug/*PackageTests.xctest -instr-profile .build/debug/codecov/default.profdata > coverage.lcov
      - uses: codecov/codecov-action@v1.5.2
        with:
            token: ${{secrets.CODECOV_TOKEN}}
            file: coverage.lcov
            fail_ci_if_error: true
